@model ResturantApplication.ViewModel.ProductViewModel
@{
    ViewBag.Title = "New";
}

<script src="~/Scripts/jquery-3.4.1.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("Items").val(0);
        $("#Items").change(function () {
            var itemId = $("#Items").val();
            GetItemPrice(itemId);
        });

        $("input[type=text]").change(function () {
            CalculateSubTotal();
        });

        $("input[type=text]").keyup(function () {
            CalculateBalance();
        });

        function RemoveItems(itemId) {
            $(itemId).closest('tr').remove();
        }

        $("#btnAddToList").click(function () {
            AddToTheItemList();
        });
        $("#txtQuantity").blur(function () {
            var ItemPrice = $("#txtItemPrice").val();
            var Quantity = $("#txtQuantity").val();
            var Discount = $("#txtDiscount").val();
            var Total = (ItemPrice * Quantity) - Discount;
        });
    });

    function CalculateBalance() {
        var FinalAmount = $("#txtPaymentTotal").val();
        var PaymentAmount = $("#txtPaymentAmount").val();
        var ReturnAmount = $("#txtReturnTotal").val();
        var BalanceAmount = parseFloat(FinalAmount) - parseFloat(PaymentAmount) + parseFloat(ReturnAmount);
        $("#txtBalance").val(parseFloat(BalanceAmount).toFixed(2));
        if (parseFloat(BalanceAmount) == 0) {
            $("#btnPayment").removeAttr("disabled");
        } else {
            $("#btnPayment").attr("disabled", "disabled");
        }
    }

    function RemoveItems(itemId) {
        $(itemId).closest('tr').remove();
    }

    function AddToTheItemList() {
        var tblItemList = $("#tblRestaurantItemList");
        var ItemPrice = $("#txtItemPrice").val();
        var Quantity = $("#txtQuantity").val();
        var Discount = $("#txtDiscount").val();
        var ItemId = $("#Items").val();
        var ItemNames = $("#Items option:selected").text();
        var Total = (ItemPrice * Quantity) - Discount;

        var ItemList = "<tr><td hidden>" +
            ItemId +
            "</td><td>" +
            ItemNames +
            "</td><td>" +
            parseFloat(ItemPrice).toFixed(2) +
            "</td><td>" +
            parseFloat(Quantity).toFixed(2) +
            "</td><td>" +
            parseFloat(Discount).toFixed(2) +
            "</td><td>" +
            parseFloat(Total).toFixed(2) +
            "</td><td> <input type='button' value='Remove' name='remove' class='btn btn-danger' onclick='RemoveItems(this)'/> </tr></tr>";

        tblItemList.append(ItemList);
        FinalItemTotal();
        ResetItems();
    }

    function FinalItemTotal() {
        $("#txtFinalTotal").val("0.00");
        var FinalTotal = 0.00;
        $("#tblRestaurantItemList").find("tr:gt(0)").each(function() {
            var Total = parseFloat($(this).find("td:eq(5)").text());
            FinalTotal += Total;
        });
        $("#txtFinalTotal").val(parseFloat(FinalTotal).toFixed(2));
        $("#txtPaymentTotal").val(parseFloat(FinalTotal).toFixed(2));
        $("#txtBalance").val(parseFloat(FinalTotal).toFixed(2));
    } 

    function ResetItems() {
        $("#txtItemPrice").val('');
        $("#txtQuantity").val('');
        $("#txtDiscount").val('0.00');
        $("#Items").val(0);
        $("#txtTotal").val("");
    }

    function CalculateSubTotal() {
        var ItemPrice = $("#txtItemPrice").val();
        var Quantity = $("#txtQuantity").val();
        var Discount = $("#txtDiscount").val();

        var Total = (ItemPrice * Quantity) - Discount;

        $("#txtTotal").val(parseFloat(Total).toFixed(2));
    }

    function GetItemPrice(itemId) {
        debugger;
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            url: '/Products/GetItemUnitPrice',
            data: { Id: itemId },

            success: function (data) {
                debugger;
                $("#txtItemPrice").val(parseInt(data));
            },
            error: function () {
                alert("There is some problem to get the Unit Price.");
            }
        });

    }

</script>

<style>
  /*  .modal{
        text-align: center;
        padding: 0!important;
    }

    .modal:before{
        content: '';
        display: inline-block;
        height: 100%;
        vertical-align: middle;
        margin-right: -4px;
    }

    .modal-dialog{
        display: inline-block;
        text-align: left;
        vertical-align: middle; 
    }*/
    body {
        background-image: url('../../Backer.jpg');
        background-size: cover;
    }
    fieldset {
        border: 1px solid #add !important;
        margin: 0;
        xmin-width: 0;
        padding: relative;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 10px !important;
    }

    legend {
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        width: 35%;
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 5px 5px 5px 10px;
        background-color: #ffffff;
    }
</style>



<fieldset>
    <legend>Restaurant</legend>
    <div class="container">
        <div class="row">
            @*<div class="col-md-4">
            <div class="form-group">
                Cashier :
                @Html.DropDownList("Cashier", new SelectList(Model.Name, "Value", "Text"), new { @class = "form-controle" })
            </div>
        </div>*@

            <div class="col-md-4">
                <div class="form-group">
                    Payment Type :
                    @*@Html.LabelFor(p => p.PaymentTypeId)*@
                    @Html.DropDownListFor(p => p.PaymentTypeId, new SelectList(Model.PaymentTypes, "Id", "Name"), "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => p.PaymentTypes)
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Total :
                    <input style="text-align: right" type="text" readonly="readonly" id="txtFinalTotal" value="0.00" name="FinalTotal"   class="form-control"/>
                </div>
            </div>

        </div>
    </div>
</fieldset>

<fieldset>
    <legend>Restaurant Items</legend>
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    Items :
                    @*@Html.LabelFor(p => p.ItemsId)*@
                    @Html.DropDownListFor(p => p.Items, new SelectList(Model.Items, "Id", "Names"), "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => p.Items)

                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Item Price :
                    <input style="text-align: right" type="text" readonly="readonly" id="txtItemPrice" value=" " name="ItemPrice" class="form-control"/>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Quantity :
                    <input style="text-align: right" type="text" id="txtQuantity" value="0" name="Quantity" class="form-control" />
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    Discount :
                    <input style="text-align: right" type="text" id="txtDiscount" value="0" name="Discount" class="form-control" />
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Total :
                    <input style="text-align: right" type="text" readonly="readonly" id="txtTotal" value="0" name="Total" class="form-control" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <input type="button" style="margin-top: 20px" value="Add To List" name="AddToList" id="btnAddToList" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset>
    <legend>Restaurant Listed Items</legend>
    <table style="width: 100%" id="tblRestaurantItemList">
        <thead>
            <tr>
                <th hidden>
                    Item Id
                </th>

                <th>Item Name</th>

                <th>Unit Price</th>

                <th>Quantity</th>

                <th>Discount</th>

                <th>Total</th>

                <th>Action</th>
            </tr>
        </thead>
    </table>
</fieldset>
<div style="margin-top: 10px">
    <input data-backdrop="static" data-keyboard="false" data-toggle="modal" data-target="#divPayment" style="float: right" type="button" value="Checkout" name="checkout" id="btnCheckOut" class="btn btn-primary"/>
</div>
 
<div id="divPayment" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Payment</h4>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="row">
                        <div class="form-group col-mid-6">
                            Payment Total :
                            <input style="text-align: right" type="text" id="txtPaymentTotal" readonly="readonly" value="0.00" class="form-control" />
                        </div>
                        <div class="form-group col-mid-6">
                            Payment Amont :
                            <input style="text-align: right" type="text" id="txtPaymentAmount" value="0.00" class="form-control" />
                        </div>

                        <div class="form-group col-mid-6">
                            Return Total :
                            <input style="text-align: right" type="text" id="txtReturnTotal"  value="0.00" class="form-control" />
                        </div>
                        <div class="form-group col-mid-6">
                            Balance Amont :
                            <input style="text-align: right" type="text" readonly="readonly" id="txtBalance" value="0.00" class="form-control" />
                        </div>

                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button class="btn btn-success" id="btnPayment" value="Payment">Payment</button>
                <button class="btn btn-danger" id="btnClose" data-dismiss="modal" value="close">Close</button>
            </div>

        </div>
    </div>
</div>






@*@model ResturantApplication.ViewModel.ProductViewModel

    @{
        ViewBag.Title = "New";
    }

    <h2>New</h2>

    @using (Html.BeginForm("Create", "Products"))
    {
        <div class="form-group">
            @Html.LabelFor(p => p.CustomerId)
            @Html.TextBoxFor(p => p.CustomerId, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(p => p.PaymentTypeId)
            @Html.DropDownListFor(p => p.PaymentTypeId, new SelectList(Model.PaymentTypes, "Id", "Name"), "", new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(p => p.Total)
            @Html.TextBoxFor(p => p.Total, new { @class = "form-control", id = "price" })
        </div>

        <div class="form-group">

            @Html.LabelFor(p => p.ItemsId)
            @Html.DropDownListFor(p => p.Items, new SelectList(Model.Items, "Id", "Names"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(p => p.Items)
        </div>*@
@*<div class="col-md-4">
        <div class="form-group">
            @Html.LabelFor(m => m.GenreId)
            @Html.DropDownListFor(m => m.GenreId, new SelectList(Model.Genres, "Id", "Name"), "Select Genre Type", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.GenreId)
        </div>
    </div>*@


@*<div class="form-group">
        @Html.LabelFor(p => p.Items)
        @Html.TextBoxFor(p => p.Items, new { @class = "form-control", id = "totalPrice" })
    </div>

    <div class="form-group">
        @Html.LabelFor(p => p.Quantity)
        @Html.TextBoxFor(p => p.Quantity, new { @class = "form-control", id = "totalPrice" })
    </div>
    <div class="form-group">
        @Html.LabelFor(p => p.Discount)
        @Html.TextBoxFor(p => p.Discount, new { @class = "form-control", id = "totalPrice" })
    </div>

    <div class="form-group">
        @Html.LabelFor(p => p.Total)
        @Html.TextBoxFor(p => p.Total, new { @class = "form-control", id = "totalPrice" })
    </div>

    <button type="submit" class="btn btn-primary"> Add To List</button>
        }

    @section scripts
        {
        @Scripts.Render("~/bundles/jqueryval")-->

        <script src="https://code.jquery.com/jquery-2.1.4.js"></script>

        <script>
            $(document).ready(function () {

                $(function () {

                    $("#quantity,#unitprice").keyup(function (e) {

                        var q = $("#quantity").val();
                        var p = $("#unitprice").val();
                        var result = "";

                        if (q !== "" && p !== "" && $.isNumeric(q) && $.isNumeric(p)) {
                            result = parseFloat(q) * parseFloat(p);
                        }
                        $("#total").val(result);

                    });

                });

            })

        </script> *@
